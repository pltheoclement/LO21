@startuml
(*) --> "commande entrée"
if "isLiteral(cmd) = linteger" then
  -->[true] "makeLiteral(cmd, linteger)"
else
  if "isLiteral(cmd) = lrational" then
    -->[true] "makeLiteral(cmd, lrational)"
  else
    if "isLiteral(cmd) = lreal" then
      -->[true] "makeLiteral(cmd, lreal)"
    else
      if "isLiteral(cmd) = lvariable" then
      note left: On test ici si la commande est un atom représentant la variable
        -->[true] "Stack.push(Computer.getVariable(cmd))"
      else
        if "isLiteral(cmd) = lprogram" then
        note left: On test ici si la commande est un atom représentant le programme
          -->[true] "Stack.push(Computer.getProgram(cmd))"
        else
          if "isOperator(cmd) = 'un des opérateurs'" then
            -->[true] "getOperator(cmd)"
            --> apply(stack)
          else
            if "première lettre de cmd est en maj" then
              -->[true] "makeLiteral(cmd, lexpression)"
            else
              if "premier caractère est '[' et dernier carractere est ']'"
                -->[true] "makeLiteral(cmd, lprogram)"
              else
                --> "raise Error"
              endif
            endif
          endif
        endif
      endif
    endif
  endif
endif
@enduml
